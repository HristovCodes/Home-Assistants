{"version":3,"sources":["firebase.js","components/User/index.js","components/Task/index.js","components/Location/index.js","components/NoMatch/index.js","components/Login/index.js","components/Register/index.js","components/Main/index.js","components/Routing/index.js","reportWebVitals.js","index.js"],"names":["setData","path","data","firebase","database","ref","update","catch","e","console","log","code","message","deleteData","id","a","remove","orderData","query","ammount","orderByChild","limitToFirst","once","response","Error","forEach","v","push","val","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","auth","User","useState","users","setUsers","search","setSearch","useEffect","pullUsers","sorting","pagination","then","u","formatUser","usersData","map","user","UserRow","firstName","lastName","className","htmlFor","name","type","onChange","temp","slice","matches","Object","values","includes","length","undefined","searchUser","target","value","Form","onClick","open","setOpen","setFirstName","setLastName","email","setEmail","role","setRole","onSubmit","preventDefault","reset","firstname","lastname","match","indexOf","splice","Task","tasks","setTasks","pullTasks","formatTask","tasksData","task","TaskRow","searchTask","setName","description","setDescription","location","setLocation","locations","setLocations","dueDate","setDueDate","budget","setBudget","category","setCategory","pullData","status","adress","obj","Location","pullLocations","formatLocation","locationsData","LocationRow","searchLocation","setAdress","NoMatch","Login","password","setPassword","history","useHistory","signInWithEmailAndPassword","onAuthStateChanged","replace","required","placeholder","Register","createUserWithEmailAndPassword","userCredential","Main","to","signOut","Routing","setUser","exact","PrivateRoute","children","rest","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc811835.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\nimport \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAgEkkojV0tUc9Uzo0uKTNhXf_pQ5Xia14\",\r\n  authDomain: \"home-assistants-1fccc.firebaseapp.com\",\r\n  databaseURL:\r\n    \"https://home-assistants-1fccc-default-rtdb.europe-west1.firebasedatabase.app\",\r\n  projectId: \"home-assistants-1fccc\",\r\n  storageBucket: \"home-assistants-1fccc.appspot.com\",\r\n  messagingSenderId: \"666388505376\",\r\n  appId: \"1:666388505376:web:62347de6465923e5016d45\",\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport function setData(path, data) {\r\n  firebase\r\n    .database()\r\n    .ref(`${path}/`)\r\n    .update(data)\r\n    .catch((e) => console.log(`${e.code}\\n${e.message}`));\r\n}\r\n\r\nexport async function deleteData(path, id) {\r\n  firebase\r\n    .database()\r\n    .ref(`${path}/${id}`)\r\n    .remove()\r\n    .catch((e) => console.log(e.message));\r\n}\r\n\r\nexport async function orderData(path, query, ammount) {\r\n  let response = await firebase\r\n    .database()\r\n    .ref(`${path}/`)\r\n    .orderByChild(query)\r\n    .limitToFirst(ammount)\r\n    .once(\"value\");\r\n\r\n  if (response.code) {\r\n    throw new Error(response.code);\r\n  } else {\r\n    const data = [];\r\n    response.forEach((v) => {\r\n      data.push(v.val());\r\n    });\r\n    return data;\r\n  }\r\n}\r\n\r\nexport async function pullData(path, query) {\r\n  let response = await firebase\r\n    .database()\r\n    .ref(`${path}/`)\r\n    .orderByChild(query)\r\n    .once(\"value\");\r\n\r\n  if (response.code) {\r\n    throw new Error(response.code);\r\n  } else {\r\n    const data = [];\r\n    response.forEach((v) => {\r\n      data.push(v.val());\r\n    });\r\n    return data;\r\n  }\r\n}\r\n\r\nexport async function pullUserData(id) {\r\n  let response = await firebase.database().ref(`user/${id}/`).once(\"value\");\r\n\r\n  if (response.code) {\r\n    throw new Error(response.code);\r\n  } else {\r\n    const data = [];\r\n    response.forEach((v) => {\r\n      data.push(v.val());\r\n    });\r\n    return data;\r\n  }\r\n}\r\n\r\nconst firebaseInstance = {\r\n  database: firebase.database,\r\n  auth: firebase.auth,\r\n};\r\n\r\nexport default firebaseInstance;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { orderData, setData, deleteData } from \"../../firebase\";\r\nimport \"../SharedStyles/styles.scss\";\r\n\r\nexport default function User() {\r\n  const [users, setUsers] = useState();\r\n  const [search, setSearch] = useState();\r\n\r\n  useEffect(() => {\r\n    if (!users) pullUsers(\"id\", 10);\r\n  });\r\n\r\n  const searchUser = (query) => {\r\n    let temp = users.slice();\r\n    let matches = [];\r\n    temp.forEach((u) => {\r\n      if (Object.values(u).includes(query)) {\r\n        matches.push(u);\r\n      }\r\n    });\r\n    if (matches.length > 0) {\r\n      return setSearch(matches);\r\n    }\r\n    setSearch(undefined);\r\n  };\r\n\r\n  // takes care of the initial call to the db to get all the users\r\n  const pullUsers = (sorting, pagination) => {\r\n    orderData(\"user\", sorting, pagination)\r\n      .then((u) => {\r\n        setUsers(u);\r\n      })\r\n      .catch((e) => console.log(e));\r\n  };\r\n\r\n  const formatUser = (usersData) => {\r\n    return usersData ? (\r\n      usersData.map((user) => (\r\n        <UserRow\r\n          key={`${user.firstName}${user.lastName}`}\r\n          data={user}\r\n          users={users}\r\n          setUsers={setUsers}\r\n        ></UserRow>\r\n      ))\r\n    ) : (\r\n      <span className=\"datarow\" key=\"000\"></span>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"dbview\">\r\n      <h1>Users:</h1>\r\n      <div className=\"buttons\">\r\n        <div>\r\n          <label className=\"lbl\" htmlFor=\"search\">\r\n            Search:\r\n          </label>\r\n          <input\r\n            className=\"inp\"\r\n            name=\"search\"\r\n            type=\"text\"\r\n            onChange={(e) => searchUser(e.target.value)}\r\n          ></input>\r\n        </div>\r\n        <Form users={users} setUsers={setUsers}></Form>\r\n        <div>\r\n          <button\r\n            className=\"btn count\"\r\n            type=\"button\"\r\n            onClick={() => {\r\n              pullUsers(\"firstName\", 10);\r\n            }}\r\n          >\r\n            10\r\n          </button>\r\n          <button\r\n            className=\"btn count\"\r\n            type=\"button\"\r\n            onClick={() => {\r\n              pullUsers(\"firstName\", 25);\r\n            }}\r\n          >\r\n            25\r\n          </button>\r\n          <button\r\n            className=\"btn count\"\r\n            type=\"button\"\r\n            onClick={() => {\r\n              pullUsers(\"firstName\", 50);\r\n            }}\r\n          >\r\n            50\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"list\">\r\n        <span className=\"columns\">\r\n          <p>email</p>\r\n          <p>firstName</p>\r\n          <p>lastName</p>\r\n          <p>role</p>\r\n          <p>Delete</p>\r\n        </span>\r\n        {search ? formatUser(search) : formatUser(users)}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Form({ users, setUsers }) {\r\n  const [open, setOpen] = useState(false);\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [role, setRole] = useState(\"\");\r\n\r\n  const addUser = (e) => {\r\n    e.preventDefault();\r\n    e.target.reset();\r\n\r\n    if (firstName && lastName && email) {\r\n      // create the object and push it to the db\r\n      let data = {};\r\n      data[`${firstName}${lastName}`] = {\r\n        firstname: firstName,\r\n        lastname: lastName,\r\n        email: email,\r\n        role: role,\r\n      };\r\n      setData(\"user\", data);\r\n\r\n      // update the state with the new object so we don't have to pull whole db again\r\n      let temp = users.slice();\r\n      let match = false;\r\n      temp.forEach((u) => {\r\n        if (Object.values(u).includes(email)) {\r\n          temp[temp.indexOf(u)] = data[`${firstName}${lastName}`];\r\n          setUsers(temp);\r\n          setOpen(false);\r\n          match = true;\r\n        }\r\n      });\r\n      if (!match) {\r\n        temp.push(data[`${firstName}${lastName}`]);\r\n        setUsers(temp);\r\n        setOpen(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form className={open ? \"form normalform\" : \"closed\"} onSubmit={addUser}>\r\n        <label className=\"lbl\" htmlFor=\"firstName\">\r\n          Име:\r\n        </label>\r\n        <input\r\n          className=\"inp\"\r\n          onChange={(e) => {\r\n            setFirstName(e.target.value);\r\n          }}\r\n          name=\"firstName\"\r\n          type=\"text\"\r\n        ></input>\r\n        <label className=\"lbl\" htmlFor=\"lastName\">\r\n          Фамилно име:\r\n        </label>\r\n        <input\r\n          className=\"inp\"\r\n          onChange={(e) => {\r\n            setLastName(e.target.value);\r\n          }}\r\n          name=\"lastName\"\r\n          type=\"text\"\r\n        ></input>\r\n        <label className=\"lbl\" htmlFor=\"email\">\r\n          Имейл:\r\n        </label>\r\n        <input\r\n          className=\"inp\"\r\n          onChange={(e) => {\r\n            setEmail(e.target.value);\r\n          }}\r\n          name=\"email\"\r\n          type=\"text\"\r\n        ></input>\r\n        <label className=\"lbl\" htmlFor=\"role\">\r\n          Роля:\r\n        </label>\r\n        <select\r\n          className=\"inp\"\r\n          onChange={(e) => {\r\n            setRole(e.target.value);\r\n          }}\r\n          name=\"category\"\r\n        >\r\n          <option value=\"Administrator\">Administrator</option>\r\n          <option value=\"Housekeeper\">Housekeeper</option>\r\n          <option value=\"Client\">Client</option>\r\n        </select>\r\n        <button className=\"btn formbtn\" type=\"submit\">\r\n          Добави\r\n        </button>\r\n      </form>\r\n      <button\r\n        className=\"btn addedit\"\r\n        onClick={() => {\r\n          setOpen(!open);\r\n        }}\r\n      >\r\n        {open ? \"Close form\" : \"Add/Edit user\"}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction UserRow({ data, users, setUsers }) {\r\n  let id = `${data.firstname}${data.lastname}`;\r\n  return (\r\n    <span className=\"datarow\">\r\n      <p>{data.email}</p>\r\n      <p>{data.firstname}</p>\r\n      <p>{data.lastname}</p>\r\n      <p>{data.role}</p>\r\n      <p\r\n        className=\"action\"\r\n        onClick={() => {\r\n          deleteData(\"user\", id);\r\n          let temp = users.slice();\r\n          temp.splice(temp.indexOf(data), 1);\r\n          setUsers(temp);\r\n        }}\r\n      >\r\n        Delete\r\n      </p>\r\n    </span>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { orderData, setData, deleteData, pullData } from \"../../firebase\";\r\nimport \"../SharedStyles/styles.scss\";\r\n\r\nexport default function Task() {\r\n  const [tasks, setTasks] = useState();\r\n  const [search, setSearch] = useState();\r\n\r\n  useEffect(() => {\r\n    if (!tasks) pullTasks(\"capacity\", 10);\r\n  });\r\n\r\n  const searchTask = (query) => {\r\n    let temp = tasks.slice();\r\n    let matches = [];\r\n    temp.forEach((u) => {\r\n      if (Object.values(u).includes(query)) {\r\n        matches.push(u);\r\n      }\r\n    });\r\n    if (matches.length > 0) {\r\n      return setSearch(matches);\r\n    }\r\n    setSearch(undefined);\r\n  };\r\n\r\n  // takes care of the initial call to the db to get all the tasks\r\n  const pullTasks = (sorting, pagination) => {\r\n    orderData(\"task\", sorting, pagination)\r\n      .then((u) => {\r\n        setTasks(u);\r\n      })\r\n      .catch((e) => console.log(e));\r\n  };\r\n\r\n  const formatTask = (tasksData) => {\r\n    return tasksData ? (\r\n      tasksData.map((task) => (\r\n        <TaskRow\r\n          key={task.name}\r\n          data={task}\r\n          tasks={tasks}\r\n          setTasks={setTasks}\r\n        ></TaskRow>\r\n      ))\r\n    ) : (\r\n      <span className=\"datarow\" key=\"000\"></span>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"dbview\">\r\n      <h1>Tasks:</h1>\r\n      <div className=\"buttons\">\r\n        <div>\r\n          <label className=\"lbl\" htmlFor=\"search\">\r\n            Search:\r\n          </label>\r\n          <input\r\n            className=\"inp\"\r\n            name=\"search\"\r\n            type=\"text\"\r\n            onChange={(e) => searchTask(e.target.value)}\r\n          ></input>\r\n        </div>\r\n        <Form tasks={tasks} setTasks={setTasks}></Form>\r\n        <div>\r\n          <button\r\n            className=\"btn count\"\r\n            type=\"button\"\r\n            onClick={() => {\r\n              pullTasks(\"capacity\", 10);\r\n            }}\r\n          >\r\n            10\r\n          </button>\r\n          <button\r\n            className=\"btn count\"\r\n            type=\"button\"\r\n            onClick={() => {\r\n              pullTasks(\"capacity\", 25);\r\n            }}\r\n          >\r\n            25\r\n          </button>\r\n          <button\r\n            className=\"btn count\"\r\n            type=\"button\"\r\n            onClick={() => {\r\n              pullTasks(\"capacity\", 50);\r\n            }}\r\n          >\r\n            50\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"list\">\r\n        <span className=\"columns\">\r\n          <p>name</p>\r\n          <p>description</p>\r\n          <p>location</p>\r\n          <p>dueDate</p>\r\n          <p>budget</p>\r\n          <p>category</p>\r\n          <p>status</p>\r\n          <p>Complete</p>\r\n          <p>Delete</p>\r\n        </span>\r\n        {search ? formatTask(search) : formatTask(tasks)}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Form({ tasks, setTasks }) {\r\n  const [open, setOpen] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [location, setLocation] = useState(\"\");\r\n  const [locations, setLocations] = useState(\"\");\r\n  const [dueDate, setDueDate] = useState(\"\");\r\n  const [budget, setBudget] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (!locations) {\r\n      pullData(\"location\", \"name\").then((data) => {\r\n        setLocations(data);\r\n      });\r\n    }\r\n  });\r\n\r\n  const addTask = (e) => {\r\n    e.preventDefault();\r\n    e.target.reset();\r\n\r\n    if (name && description && location && dueDate && budget && category) {\r\n      // create the object and push it to the db\r\n      let data = {};\r\n      data[name] = {\r\n        name: name,\r\n        description: description,\r\n        location: location,\r\n        dueDate: dueDate,\r\n        budget: budget,\r\n        category: category,\r\n        status: \"чакаща\",\r\n      };\r\n      setData(\"task\", data);\r\n\r\n      // update the state with the new object so we don't have to pull whole db again\r\n      let temp = tasks.slice();\r\n      let match = false;\r\n      temp.forEach((u) => {\r\n        if (Object.values(u).includes(name)) {\r\n          temp[temp.indexOf(u)] = data[name];\r\n          setTasks(temp);\r\n          setOpen(false);\r\n          match = true;\r\n        }\r\n      });\r\n      if (!match) {\r\n        temp.push(data[name]);\r\n        setTasks(temp);\r\n        setOpen(false);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <form className={open ? \"form normalform\" : \"closed\"} onSubmit={addTask}>\r\n        <label className=\"lbl\" htmlFor=\"name\">\r\n          Име:\r\n        </label>\r\n        <input\r\n          className=\"inp\"\r\n          onChange={(e) => {\r\n            setName(e.target.value);\r\n          }}\r\n          name=\"name\"\r\n          type=\"text\"\r\n        ></input>\r\n        <label className=\"lbl\" htmlFor=\"description\">\r\n          Описание:\r\n        </label>\r\n        <input\r\n          className=\"inp\"\r\n          onChange={(e) => {\r\n            setDescription(e.target.value);\r\n          }}\r\n          name=\"description\"\r\n          type=\"text\"\r\n        ></input>\r\n\r\n        <label className=\"lbl\" htmlFor=\"location\">\r\n          Локация:\r\n        </label>\r\n        <select\r\n          className=\"inp\"\r\n          onChange={(e) => {\r\n            setLocation(e.target.value);\r\n          }}\r\n          name=\"location\"\r\n        >\r\n          <option value=\"\"></option>\r\n          {Object.values(locations).map((e) => {\r\n            return <option value={e.adress}>{e.adress}</option>;\r\n          })}\r\n        </select>\r\n        <label className=\"lbl\" htmlFor=\"duedate\">\r\n          Срок:\r\n        </label>\r\n        <input\r\n          className=\"inp\"\r\n          onChange={(e) => {\r\n            setDueDate(e.target.value);\r\n          }}\r\n          name=\"duedate\"\r\n          type=\"date\"\r\n        ></input>\r\n        <label className=\"lbl\" htmlFor=\"budget\">\r\n          Бюджет:\r\n        </label>\r\n        <input\r\n          className=\"inp\"\r\n          onChange={(e) => {\r\n            setBudget(e.target.value);\r\n          }}\r\n          name=\"budget\"\r\n          type=\"text\"\r\n        ></input>\r\n        <label className=\"lbl\" htmlFor=\"category\">\r\n          Категория:\r\n        </label>\r\n        <select\r\n          className=\"inp\"\r\n          onChange={(e) => {\r\n            setCategory(e.target.value);\r\n          }}\r\n          name=\"category\"\r\n        >\r\n          <option value=\"\"></option>\r\n          <option value=\"почистване и дизенфекция\">\r\n            почистване и дизенфекция\r\n          </option>\r\n          <option value=\"грижа за домашни любимци и растения\">\r\n            грижа за домашни любимци и растения\r\n          </option>\r\n          <option value=\"грижа за дете\">грижа за дете</option>\r\n          <option value=\"грижа за възрастен човек\">\r\n            грижа за възрастен човек\r\n          </option>\r\n        </select>\r\n        <button className=\"btn formbtn\" type=\"submit\">\r\n          Добави\r\n        </button>\r\n      </form>\r\n      <button\r\n        className=\"btn addedit\"\r\n        onClick={() => {\r\n          setOpen(!open);\r\n        }}\r\n      >\r\n        {open ? \"Close form\" : \"Add/Edit client\"}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction TaskRow({ data, tasks, setTasks }) {\r\n  return (\r\n    <span className=\"datarow\">\r\n      <p>{data.name}</p>\r\n      <p>{data.description}</p>\r\n      <p>{data.location}</p>\r\n      <p>{data.dueDate}</p>\r\n      <p>{data.budget}</p>\r\n      <p>{data.category}</p>\r\n      <p>{data.status}</p>\r\n      {data.status !== \"Изпълнена\" ? (\r\n        <p\r\n          className=\"action clickable\"\r\n          onClick={() => {\r\n            data.status = \"Изпълнена\";\r\n            let obj = {};\r\n            obj[data.name] = data;\r\n            setData(\"task\", obj);\r\n\r\n            let temp = tasks.slice();\r\n            temp.splice(temp.indexOf(data), 1);\r\n            temp.push(data);\r\n            setTasks(temp);\r\n          }}\r\n        >\r\n          Complete\r\n        </p>\r\n      ) : (\r\n        <p>-</p>\r\n      )}\r\n      <p\r\n        className=\"action clickable\"\r\n        onClick={() => {\r\n          deleteData(\"task\", data.name);\r\n          let temp = tasks.slice();\r\n          temp.splice(temp.indexOf(data), 1);\r\n          setTasks(temp);\r\n        }}\r\n      >\r\n        Delete\r\n      </p>\r\n    </span>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { orderData, setData, deleteData } from \"../../firebase\";\r\nimport \"../SharedStyles/styles.scss\";\r\n\r\nexport default function Location() {\r\n  const [locations, setLocations] = useState();\r\n  const [search, setSearch] = useState();\r\n\r\n  useEffect(() => {\r\n    if (!locations) pullLocations(\"capacity\", 10);\r\n  });\r\n\r\n  const searchLocation = (query) => {\r\n    let temp = locations.slice();\r\n    let matches = [];\r\n    temp.forEach((u) => {\r\n      if (Object.values(u).includes(query)) {\r\n        matches.push(u);\r\n      }\r\n    });\r\n    if (matches.length > 0) {\r\n      return setSearch(matches);\r\n    }\r\n    setSearch(undefined);\r\n  };\r\n\r\n  // takes care of the initial call to the db to get all the locations\r\n  const pullLocations = (sorting, pagination) => {\r\n    orderData(\"location\", sorting, pagination)\r\n      .then((u) => {\r\n        setLocations(u);\r\n      })\r\n      .catch((e) => console.log(e));\r\n  };\r\n\r\n  const formatLocation = (locationsData) => {\r\n    return locationsData ? (\r\n      locationsData.map((location) => (\r\n        <LocationRow\r\n          key={location.id}\r\n          data={location}\r\n          locations={locations}\r\n          setLocations={setLocations}\r\n        ></LocationRow>\r\n      ))\r\n    ) : (\r\n      <span className=\"datarow\" key=\"000\"></span>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"dbview\">\r\n      <h1>Locations:</h1>\r\n      <div className=\"buttons\">\r\n        <div>\r\n          <label className=\"lbl\" htmlFor=\"search\">\r\n            Search:\r\n          </label>\r\n          <input\r\n            className=\"inp\"\r\n            name=\"search\"\r\n            type=\"text\"\r\n            onChange={(e) => searchLocation(e.target.value)}\r\n          ></input>\r\n        </div>\r\n        <Form locations={locations} setLocations={setLocations}></Form>\r\n        <div>\r\n          <button\r\n            className=\"btn count\"\r\n            type=\"button\"\r\n            onClick={() => {\r\n              pullLocations(\"adress\", 10);\r\n            }}\r\n          >\r\n            10\r\n          </button>\r\n          <button\r\n            className=\"btn count\"\r\n            type=\"button\"\r\n            onClick={() => {\r\n              pullLocations(\"adress\", 25);\r\n            }}\r\n          >\r\n            25\r\n          </button>\r\n          <button\r\n            className=\"btn count\"\r\n            type=\"button\"\r\n            onClick={() => {\r\n              pullLocations(\"adress\", 50);\r\n            }}\r\n          >\r\n            50\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"list\">\r\n        <span className=\"columns\">\r\n          <p>name</p>\r\n          <p>adress</p>\r\n          <p>Delete</p>\r\n        </span>\r\n        {search ? formatLocation(search) : formatLocation(locations)}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Form({ locations, setLocations }) {\r\n  const [open, setOpen] = useState(false);\r\n  const [adress, setAdress] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n\r\n  const addLocation = (e) => {\r\n    e.preventDefault();\r\n    e.target.reset();\r\n\r\n    if (adress && name) {\r\n      // create the object and push it to the db\r\n      let data = {};\r\n      data[adress] = {\r\n        adress: adress,\r\n        name: name,\r\n      };\r\n      setData(\"location\", data);\r\n\r\n      console.log(locations);\r\n      // update the state with the new object so we don't have to pull whole db again\r\n      let temp = locations.slice();\r\n      let match = false;\r\n      temp.forEach((u) => {\r\n        if (Object.values(u).includes(adress)) {\r\n          temp[temp.indexOf(u)] = data[adress];\r\n          setLocations(temp);\r\n          setOpen(false);\r\n          match = true;\r\n        }\r\n      });\r\n      if (!match) {\r\n        temp.push(data[adress]);\r\n        setLocations(temp);\r\n        setOpen(false);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <form\r\n        className={open ? \"form normalform\" : \"closed\"}\r\n        onSubmit={addLocation}\r\n      >\r\n        <label className=\"lbl\" htmlFor=\"location\">\r\n          Локация:\r\n        </label>\r\n        <input\r\n          className=\"inp\"\r\n          onChange={(e) => {\r\n            setAdress(e.target.value);\r\n          }}\r\n          name=\"location\"\r\n          type=\"text\"\r\n        ></input>\r\n        <label className=\"lbl\" htmlFor=\"name\">\r\n          Име:\r\n        </label>\r\n        <input\r\n          className=\"inp\"\r\n          onChange={(e) => {\r\n            setName(e.target.value);\r\n          }}\r\n          name=\"name\"\r\n          type=\"text\"\r\n        ></input>\r\n        <button className=\"btn formbtn\" type=\"submit\">\r\n          Добави\r\n        </button>\r\n      </form>\r\n      <button\r\n        className=\"btn addedit\"\r\n        onClick={() => {\r\n          setOpen(!open);\r\n        }}\r\n      >\r\n        {open ? \"Close form\" : \"Add/Edit location\"}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction LocationRow({ data, locations, setLocations }) {\r\n  return (\r\n    <span className=\"datarow\">\r\n      <p>{data.name}</p>\r\n      <p>{data.adress}</p>\r\n      <p\r\n        className=\"action clickable\"\r\n        onClick={() => {\r\n          deleteData(\"location\", data.adress);\r\n          let temp = locations.slice();\r\n          temp.splice(temp.indexOf(data), 1);\r\n          setLocations(temp);\r\n        }}\r\n      >\r\n        Delete\r\n      </p>\r\n    </span>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function NoMatch() {\r\n  return <div>Error404</div>;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport firebase from \"../../firebase.js\";\r\nimport \"./styles.scss\";\r\n\r\nexport default function Login() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  let history = useHistory();\r\n\r\n  const loginUser = (e) => {\r\n    e.preventDefault();\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(() => {\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n          if (user) {\r\n            history.replace(\"/Home-Assistants/\");\r\n          }\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e.code);\r\n        console.log(e.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <form className=\"loginform\" onSubmit={loginUser}>\r\n        <h1>HOME ASSISTANTS</h1>\r\n        <div>\r\n          <h2>Моля влезте във вашият акаунт</h2>\r\n          <input\r\n            className=\"inp\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required={true}\r\n            type=\"email\"\r\n            placeholder=\"examplemail@provider.com\"\r\n          ></input>\r\n          <input\r\n            className=\"inp\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required={true}\r\n            type=\"password\"\r\n            placeholder=\"password\"\r\n          ></input>\r\n          <button className=\"btn\" type=\"submit\">\r\n            Вход\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              history.replace(\"/Home-Assistants/Register\");\r\n            }}\r\n            className=\"btn\"\r\n            type=\"submit\"\r\n          >\r\n            Към Регистрация\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport firebase, { setData } from \"../../firebase.js\";\r\nimport \"./styles.scss\";\r\n\r\nexport default function Register() {\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  let history = useHistory();\r\n\r\n  const registerUser = (e) => {\r\n    e.preventDefault();\r\n\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((userCredential) => {\r\n        // Signed in\r\n        let data = {};\r\n        data[`${firstName}${lastName}`] = {\r\n          email: email,\r\n          firstname: firstName,\r\n          lastname: lastName,\r\n          role: \"Client\",\r\n        };\r\n        setData(\"user\", data);\r\n        var user = userCredential.user;\r\n        if (user) {\r\n          history.replace(\"/Home-Assistants/\");\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.log(e.code);\r\n        console.log(e.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"register\">\r\n      <form className=\"registerform\" onSubmit={registerUser}>\r\n        <h1>HOME ASSISTANTS</h1>\r\n        <div>\r\n          <h2>Моля регистрирайте се</h2>\r\n          <input\r\n            className=\"inp\"\r\n            onChange={(e) => setFirstName(e.target.value)}\r\n            required={true}\r\n            type=\"text\"\r\n            placeholder=\"Jhon\"\r\n          ></input>\r\n          <input\r\n            className=\"inp\"\r\n            onChange={(e) => setLastName(e.target.value)}\r\n            required={true}\r\n            type=\"text\"\r\n            placeholder=\"Wick\"\r\n          ></input>\r\n          <input\r\n            className=\"inp\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required={true}\r\n            type=\"email\"\r\n            placeholder=\"examplemail@provider.com\"\r\n          ></input>\r\n          <input\r\n            className=\"inp\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required={true}\r\n            type=\"password\"\r\n            placeholder=\"password\"\r\n          ></input>\r\n          <button className=\"btn\" type=\"submit\">\r\n            Регистрация\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              history.replace(\"/Home-Assistants/Login\");\r\n            }}\r\n            className=\"btn\"\r\n            type=\"button\"\r\n          >\r\n            Към Вход\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport firebaseInstance from \"../../firebase\";\r\nimport \"./styles.scss\";\r\n\r\nexport default function Main() {\r\n  return (\r\n    <div className=\"main\">\r\n      <ul>\r\n        <li>\r\n          <Link to=\"/Home-Assistants/User\">Users Database</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/Home-Assistants/Location\">Locations Database</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/Home-Assistants/Task\">Tasks Database</Link>\r\n        </li>\r\n      </ul>\r\n      <button\r\n        className=\"btn\"\r\n        onClick={() => {\r\n          firebaseInstance.auth().signOut();\r\n        }}\r\n        type=\"button\"\r\n      >\r\n        Log Out\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport firebase from \"../../firebase.js\";\r\nimport User from \"../User/index\";\r\nimport Task from \"../Task/index\";\r\nimport Location from \"../Location/index\";\r\nimport NoMatch from \"../NoMatch/index\";\r\nimport Login from \"../Login/index\";\r\nimport Register from \"../Register/index\";\r\nimport Main from \"../Main/index\";\r\nimport \"./styles.scss\";\r\nimport \"normalize.css\";\r\n\r\nexport default function Routing() {\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged((u) => {\r\n      if (u) {\r\n        // User is signed in.\r\n        setUser(u);\r\n      } else {\r\n        setUser(\"anon\");\r\n      }\r\n    });\r\n  });\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"routing\">\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to=\"/Home-Assistants/\"></Redirect>\r\n          </Route>\r\n          <PrivateRoute user={user} exact path=\"/Home-Assistants/\">\r\n            <Main></Main>\r\n          </PrivateRoute>\r\n          <PrivateRoute user={user} path=\"/Home-Assistants/User\">\r\n            <User></User>\r\n          </PrivateRoute>\r\n          <PrivateRoute user={user} path=\"/Home-Assistants/Location\">\r\n            <Location></Location>\r\n          </PrivateRoute>\r\n          <PrivateRoute user={user} path=\"/Home-Assistants/Task\">\r\n            <Task></Task>\r\n          </PrivateRoute>\r\n          <Route path=\"/Home-Assistants/Login\">\r\n            <Login></Login>\r\n          </Route>\r\n          <Route path=\"/Home-Assistants/Register\">\r\n            <Register></Register>\r\n          </Route>\r\n          <Route path=\"*\">\r\n            <NoMatch></NoMatch>\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nfunction PrivateRoute({ user, children, ...rest }) {\r\n  if (user)\r\n    return (\r\n      <Route {...rest}>\r\n        {user !== \"anon\" && user ? (\r\n          children\r\n        ) : (\r\n          <Redirect to={\"/Home-Assistants/Login\"}></Redirect>\r\n        )}\r\n      </Route>\r\n    );\r\n  return null;\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Routing from \"./components/Routing/index\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routing />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}